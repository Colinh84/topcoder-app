@import 'tc-styles';
@include glyphicons-halflings;

body {
  @include font-with-weight('Merriweather Sans', 400);
  background-color: $gray-lighter;

  > svg {
    display: none;
  }
}

// TODO move hidden and visible classes to ui helpers kit
.hidden {
  visibility: hidden;
}

.visible {
  visibility: visible;
}

.fold-wrapper {
  min-height: 100%;
  @media only screen and (min-width : 1025px) {
    margin: 0 auto -270px;
  }
  @media only screen and (max-width : 1024px) {
    margin: 0 auto -200px;
  }
}

.notifications {
  @media screen and (min-device-width: 768px) {
    min-width: 768px;
  }

  .notifications-container {
    position: static;
    z-index: 0;
  }
  .error {
    color: #a94442;
    background-color: #f2dede;
    border-color: #ebccd1;
  }
}

.view-container {
  padding-bottom: 30px;
  min-height: 480px;
  @media screen and (min-device-width: 768px) {
    min-width: 768px;
  }
}

.notifications {
  .close-click {
    font-size: inherit;
  }
}

// Section loading and form styles
.section-loading {
  width: 100%;
  min-height: 50px;
  background: url(/images/ripple.gif) no-repeat center center;
}

.form-errors {
  width: 380px;
}

.form-notice {
  font-size: 13px;
  color: #58595B;
}

.form-error {
  @extend .form-notice;
  color: #ed5d5d;
}


.form-input-error {
  padding: 10px;
  margin-bottom: 10px;
  background-color: $error-lighter;
  border: 1px solid $error-light;
  color: $error;
  text-align: left;
  font-size: 12px;
  line-height: 20px;
}

#toast-container > div {
  width: 400px;
  opacity: 0.95;
  @include sofia-pro-light;
}

@media (max-width: 767px) {
  .form-errors {
    width: 100%;
  }
}

// Intro JS
// -----------------------------------------------------------

.introjs-overlay {
  opacity: 0.94;
  background: $accent-gray-dark;
}

.introjs-tooltip {
  max-width: 320px;
  padding: 0 20px 20px;
}

.introjs-tooltiptext {
  color: $gray-darker;
  display: flex;
  flex-direction: column;
  align-items: center;
  @include font-with-weight('Merriweather Sans', 400);
  font-size: 13px;
  line-height: 20px;

  h1 {
    margin-top: 20px;
    text-align: center;
    @include sofia-pro-medium;
    font-size: 16px;
    color: $gray-darkest;
    line-height: 24px;
  }

  img {
    max-width: 320px;
    display: none;

    @media only screen and (min-width : 768px) {
      display: block;
    }
  }

  p {
    margin-top: 20px;
  }
}


.introjs-helperLayer {
  background: $white;
  border: 1px solid #85CCFF;
  box-shadow: 0px 0px 4px 0px rgba(0, 150, 255, 0.20);
  border-radius: 6px;
}

.introjs-helperNumberLayer {
  width: 30px;
  height: 30px;
  padding: 0;
  line-height: 22px;
  border: 3px solid $white;
  background: $primary;
  @include sofia-pro-medium;
  font-size: 17px;
  box-shadow: 0px 1px 4px 0px rgba(0,0,0,0.20);
}

.introjs-tooltipbuttons {
  width: 280px;
  float: right;
}

// Refactor buttons when button mixins and/or style guide is done
.introjs-button {
  @extend .tc-btn;
  @extend .tc-btn-s;
}

.introjs-skipbutton {
  float: left;
  @extend .tc-btn-ghost;
}


.introjs-disabled {
  @extend .tc-btn-s;
  @extend :disabled;
}

.introjs-prevbutton {
  margin-right: 10px;
}
.introjs-nextbutton {}

.introjs-bullets ul li {
  margin-right: 3px;
}

.introjs-bullets ul li a {
  width: 5px;
  height: 5px;
  border-radius: 0;
  background-color: $gray;

  &.active {
    background-color: $primary;
  }
}

// Intro JS END

// FORMS
// ----------------------------------------------------------------------
//
// Form Labels

.form-label {
  @include sofia-pro-medium;
  font-size: 12px;
  color: $gray-darkest;
  text-transform: uppercase;
  margin-bottom: 5px;
  margin-top: 5px;

  .mandatory {
    text-transform: none;
    color: $primary-light;
    float: right;
  }

  .char-count {
    float: right;
    font-size: 11px;
    padding-right: 5px;
  }

  .grey {
    color: $accent-gray;
  }
}

.form-errors {
  position: relative;
  line-height: 22px;
  //top: 70px;
  //left: 3px;
}


.form-errors {
  text-align: left;

  p {
    margin: 2px 0 12px 5px;
  }
}

// Error and success styles
.validation-bar {
  position: relative;

  &:before {
    content: '';
    display: none;
    position: absolute;
    top: 0px;
    left: 1px;
    height: 38px;
    width: 2px;
    border-radius: 3px 0 0 3px;
  }

  &.error-bar:before {
    display: block;
    background-color: $error;
  }

  &.success-bar:before {
    display: block;
    background-color: $success;
  }
}

// FORM TIPS
// ----------------------------------------------------------------------
// probably structure needs to be redone

$tips-shadow: 0px 1px 6px 1px rgba(0, 0, 0, 0.2);
$tips-background: $gray-lighter;

// Tip conatiner
.tips {
  background-color: $tips-background;
  border-radius: 4px;
  padding: 20px;
  z-index: 1000;
  opacity: 1;
  transition: all .1s ease-in-out;
  padding-bottom: 20px;
  @media screen and (min-width: 915px) {
    position: absolute;
    width: 320px;
    text-align: left;
    top: -10px;
    box-shadow: $tips-shadow;
    padding-bottom: 0;
  }

  // The tip container is hidden
  &.ng-hide {
    opacity: 0;
  }

  // Tip container arrow element
  .arrow {
    display: none;
    @media screen and (min-width: 915px){
      display: block;
      position: absolute;
      left: -24px;
      top: 10px;
      width: 24px;
      height: 34px;
      overflow: hidden;

      &:after {
      content: '';
      position: absolute;
      display: block;
      top: 10px;
      left: 18px;
      width: 12px;
      height: 12px;
      background-color: $tips-background;
      -webkit-transform: rotate(45deg);
      -moz-transform:    rotate(45deg);
      -ms-transform:     rotate(45deg);
      -o-transform:      rotate(45deg);
      box-shadow: $tips-shadow;
      }
    }
  }

  h3 {
    @include sofia-pro-medium;
    padding-bottom: 15px;
    font-size: 14px;
    @media only screen and (max-width: 915px) {
      font-size: 16px;
    }
  }

  p {
    font-size: 13px;
    color: $gray-darkest;
    line-height: 1.3;
    position: relative;
    padding-bottom: 10px;
    text-align: left;
  }

  p:before {
    // font-family: 'FontAwesome';
    @include sofia-pro-medium;
    font-size: 14px;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
  }
}

// Password tips show checkmark validation
// TODO: refactor name to be context independent, like .validation-tips
.password-tips {
  p {
    padding-left: 20px
  }

  p:before {
    content: '\2713 ';
    color: $success;
    display: none;
  }

  .has-length-between-range:before,
  .has-letter:before,
  .has-symbol-or-number:before,
  .has-number:before {
    display: block;
  }
}


// SWITCHES
// ----------------------------------------------------------------------
// TODO: Refactor

// Switch parameters
$switch-width: 44px;
$switch-height: 24px;
$switch-handle-offset: 3px;
$switch-handle-size: $switch-height - (2 * $switch-handle-offset);
$switch-active-color: $primary;
$switch-inactive-color: $gray;

@mixin switch-transition {
  transition: all 0.15s ease-in-out;
}

// Parent container
.onoffswitch {
  position: relative;
  width: $switch-width;
  height: $switch-height;
  -webkit-user-select:none;
  -moz-user-select:none;
  -ms-user-select: none;
  box-sizing: border-box;
  border-radius: $switch-height;
  background-color: $switch-inactive-color;
  @include switch-transition;
}

.onoffswitch-checkbox {
  display: none;
}

.onoffswitch-label {
  display: block;
  width: $switch-width;
  overflow: hidden;
  cursor: pointer;
  border-radius: $switch-height;
}

.onoffswitch-inner {
  display: block;
  width: 200%;
  margin-left: -100%;
  @include switch-transition;
}

// Pseudo-elements that slide to create background of the switch; TODO: Remove those
.onoffswitch-inner:before, .onoffswitch-inner:after {
  display: block;
  float: left;
  width: 50%;
  height: $switch-height;
  padding: 0;
  line-height: $switch-height;
  font-size: 15px;
  color: white;
  font-weight: bold;
  box-sizing: border-box;
}

.onoffswitch-checkbox + .onoffswitch-label {
    background-color: $switch-inactive-color;
    @include switch-transition;
}

.onoffswitch-checkbox:checked + .onoffswitch-label {
  background-color: $switch-active-color;
  & .onoffswitch-inner {
    // margin-left: 0;
    // background-color: $switch-active-color;
  }

  & .onoffswitch-switch {
    right: 0;
  }
}


// Switch is on
.onoffswitch-inner:before {
  content: "";
  padding-left: 10px;
  background-color: transparent; //$switch-active-color;
  color: transparent;// $switch-active-color;
}

// switch is off
.onoffswitch-inner:after {
  content: "";
  padding-right: 10px;
  background-color: transparent; // $switch-inactive-color;
  color: transparent; // $switch-inactive-color;
  text-align: right;
}

// SWITCH HANDLE
.onoffswitch-switch {
  display: block;
  background-color: $white;
  color: $white;
  width: $switch-handle-size;
  height: $switch-handle-size;
  background: $white;
  position: absolute;
  margin: $switch-handle-offset;
  top: 0;
  bottom: 0;
  right: $switch-handle-offset + $switch-handle-size -1;
  border: none;
  border-radius: $switch-height;
  @include switch-transition;
}
